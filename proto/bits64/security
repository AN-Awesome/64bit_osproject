//출력 버퍼(포트 0x60)에 수신된 데이터가 있는지 여부를 반환
BOOL kIsOutputBufferFull(void){
    
    // 상태 레지스터(포트 0x64)에서 읽은 값에 출력 버퍼 상태 비트(비트 0)가
    // 1로 설정되어 있으면 출력 버퍼에 키보드가 전송한 데이터가 존재함
    if(kInPortByte(0x64) & 0x01){
        return TRUE;
    }

    return FALSE;
}


// 입력버터(포트 0x60)에 수신된 데이터가 있는지 여부를 반환
BOOL kIsInputBufferFull(void){

    //상태 레지스터(포트 0x64)에서 읽은 값에 입력 버퍼 상태 비트(비트1)가
    //1로 설정되어 있으면 아직 키보드가 데이터를 가져가지 않았음
    if(kInPortByte(0x64) & 0x02){
        return TRUE;
    }
    return FALSE;
}


//키보드 활성화
BOOL kActivateKeyboard(void){

    int i;
    int j;

    //컨트롤 레지스터(포트 0x64)에 키보드 활성화 커맨드(0xAE)를 전달하여 키보드 디바이스 활성화
    kOurtPortByte(0x64, 0xAE);  // 키보드 컨트롤러에 키보드 활성화 커맨드 전송
                                // 0x64 : 컨트롤 레지스터 포트 번호
                                // 0xAE : 키보드 디바이스 활성화 커맨드
    // 입력 버퍼(포트 0x60)가 빌 때까지 기다렸다가 키보드에 활성화 커맨드를 전송
    // 0xFFFF만큼 루프를 수행할 시간이면 충분히 커맨드가 전송될 수 있음.
    // 0xFFFF 루프를 수행한 이후에도 입력 버퍼(포트 0x60)가 비지 않으면 무시하고 전송
    for(i=0; i < 0xFFFF; i++){
        //입력 버퍼(포트 0x60)가 비어있으면 키보드 커맨드 전송 가능
        if(kIsInputBufferFull() == FALSE) break;
    }





    // 입력 버퍼(포트 0x60)로 키보드 활성화(0F4) 커맨드를 전달하여 키보드로 전송
    kOutPortByte(0x60, 0xF4);   //키보드로 직접 활성화 커맨드 전송
                                // 0x60 : 입력 버퍼의 포트 번호
                                // 0xF4 : 키보드 활성화 커맨드
    // ACK가 올 때까지 대기함
    // ACK가 오기 전에 키보드 출력 버퍼에 키 데이터가 저장될 수 있으므로
    // 키보드에서 전달된 데이터를 최대 100개까지 수신하여 ACK를 확인
    for(j = 0; j < 100; J++){

        // 0xFFFF만큼 루프를 수행할 시간이면 충분히 커맨드으이 응답이 올 수 있음
        // 0xFFFF 루프를 수행한 이후에도 출력 버퍼(포트 0x60)가 차 있지 않으면 무시하고 읽음
        for(i=0; i<0xFFFF; i++){

            // 출력 버퍼(포트 0x60)가 차 있으면 데이터를 읽을 수 있음
            if(kIsOutputBufferFull == TRUE) break;
        }
    



        // 출력 버퍼(포트 0x60)에서 읽은 데이터가 ACK(0xFA)이면 성공
        if(kInPortByte(0x60) == 0xFA)   // 0x60 : 출력 버퍼의 포트 번호
                                        // 0xFA : 정상적으로 처리되었다는 응답
        {
            return TRUE;
        }
    }
    
    return FALSE;
}